services:
  api:
    container_name: postal_api
    build:
      context: .
      dockerfile: ./worker/api/Dockerfile
    ports:
      - "3201:3201"
    networks:
      custom_network:
        ipv4_address: 172.20.0.1

  crawler:
    container_name: postal_crawler
    build:
      context: .
      dockerfile: ./worker/crawler/Dockerfile
    ports:
      - "3202:3202"
    networks:
      custom_network:
        ipv4_address: 172.20.0.2

networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

  # frontend:
  #   build:
  #     context: ./sample/frontend
  #     dockerfile: ./sample/frontend/Dockerfile
  #   ports:
  #     - "3014:3014"
  #   networks:
  #     custom_network:
  #       ipv4_address: 172.20.1.4

  # mysql:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: app_db
  #   volumes:
  #     - mysql-data:/var/lib/mysql
  #   ports:
  #     - "3015:3015"
  #   networks:
  #     custom_network:
  #       ipv4_address: 172.20.1.5

  # postgres:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: app_db
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   ports:
  #     - "3016:3016"
  #   networks:
  #     custom_network:
  #       ipv4_address: 172.20.1.6

  # sqlite:
  #   image: nouchka/sqlite3
  #   volumes:
  #     - sqlite-data:/data
  #   ports:
  #     - "3017:3017"
  #   networks:
  #     custom_network:
  #       ipv4_address: 172.20.1.7
